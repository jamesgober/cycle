[package] 
name = "cycle"
version = "0.5.0"
edition = "2021"
readme  = "README.md"
license = "Apache-2.0"

documentation = "https://docs.rs/cycle"
repository    = "https://github.com/jamesgober/cycle"
homepage      = "https://cycle-rs.io"

description = "Ultra-high performance async runtime with fast task cycling, lock-free scheduling, and zero-overhead performance"
keywords = [
    "async", 
    "runtime", 
    "performance", 
    "concurrent",
    "lock-free"
]
categories = [
    "asynchronous",
    "concurrency", 
    "network-programming",
    "web-programming",
    "development-tools"
]

exclude = [
    ".github/",
    "benches/",
    "docs/",
    "dev/",
]

authors = [
    "James Gober <contact@jamesgober.com>"
]


[features]
default = ["rt", "net", "time", "sync", "fs"]

# Core features
rt = ["dep:num_cpus"]
net = ["rt", "dep:socket2", "dep:mio"]
time = ["rt"]
sync = ["rt"]
fs = ["rt", "net"]

# I/O optimizations  
io-uring = ["net", "dep:io-uring", "dep:libc"]
numa = ["rt", "dep:hwloc2"]

# Networking enhancements
tls = ["net", "dep:rustls", "dep:rustls-pemfile", "dep:tokio-rustls"]
compression = ["dep:flate2", "dep:zstd", "dep:lz4_flex"]

# Monitoring and observability
metrics = ["dep:prometheus", "dep:histogram"]
tracing = ["dep:tracing", "dep:tracing-subscriber", "dep:opentelemetry"]

# Fault tolerance
circuit-breaker = ["rt"]
rate-limiting = ["rt", "time"]

# Development and debugging
dev-tools = ["metrics", "tracing", "dep:criterion"]
profiling = ["dep:pprof", "dep:flamegraph"]

# Convenience feature groups
full = [
    "rt", "net", "time", "sync", "fs",
    "io-uring", "numa", "tls", "compression",
    "metrics", "tracing", "circuit-breaker", "rate-limiting"
]

# Platform-specific optimizations
simd = []
avx2 = ["simd"]

[dependencies]
# Core runtime dependencies
num_cpus = { version = "1.16", optional = true }
crossbeam = "0.8"
parking_lot = "0.12"
once_cell = "1.19"
pin-project-lite = "0.2"

# Async ecosystem compatibility
futures-core = "0.3"
futures-util = "0.3"
futures-sink = "0.3"

# Low-level system interfaces
libc = { version = "0.2", optional = true }
mio = { version = "0.8", optional = true, features = ["os-poll", "net"] }
socket2 = { version = "0.5", optional = true }

# Linux-specific optimizations
io-uring = { version = "0.6", optional = true }
hwloc2 = { version = "2.0", optional = true }

# TLS support
rustls = { version = "0.22", optional = true }
rustls-pemfile = { version = "2.0", optional = true }
tokio-rustls = { version = "0.25", optional = true }

# Compression
flate2 = { version = "1.0", optional = true }
zstd = { version = "0.13", optional = true }
lz4_flex = { version = "0.11", optional = true }

# Metrics and monitoring
prometheus = { version = "0.13", optional = true }
histogram = { version = "0.6", optional = true }

# Tracing and observability
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", optional = true, features = ["env-filter"] }
opentelemetry = { version = "0.21", optional = true }

# Serialization (for metrics/config)
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Utility crates
bytes = "1.5"
smallvec = "1.11"
dashmap = "5.5"
ahash = "0.8"

# Development dependencies (optional)
criterion = { version = "0.5", optional = true }
pprof = { version = "0.13", optional = true, features = ["flamegraph", "protobuf-codec"] }
flamegraph = { version = "0.6", optional = true }

[dev-dependencies]
# Testing framework
tokio-test = "0.4"
proptest = "1.4"
quickcheck = "1.0"

# Benchmarking
criterion = { version = "0.5", features = ["html_reports"] }
iai = "0.1"

# Example dependencies
axum = "0.7"
hyper = "1.0"
tower = "0.4"
tower-http = "0.5"
reqwest = "0.11"

# Test utilities
env_logger = "0.10"
tempfile = "3.8"
rand = "0.8"

[target.'cfg(unix)'.dependencies]
signal-hook = "0.3"

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.52", features = [
    "Win32_Foundation",
    "Win32_System_IO",
    "Win32_Networking_WinSock",
] }

[profile.release]
lto = "fat"
codegen-units = 1
panic = "abort"
strip = "symbols"
opt-level = 3

[profile.bench]
inherits = "release"
debug = true
strip = "none"

[profile.dev]
opt-level = 0
debug = true
incremental = true

# Profile-guided optimization profiles
[profile.pgo-gen]
inherits = "release"
debug = 1
strip = "none"

[profile.pgo-use]
inherits = "release"
codegen-units = 1
